# This is a basic workflow to help you get started with Actions

name: Upload-Scan-Policy

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  # push:
  #   branches: [ master ]
  # pull_request:
  #   branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - uses: actions/setup-java@v1 # Make java accessible on path so the uploadandscan action can run.
        with: 
          java-version: '8'

      - name: Build with Maven
        run: mvn -B package --file app/pom.xml

      - name: List files in the repository
        run: |
          ls -al ${{ github.workspace }}
      - uses: actions/upload-artifact@v2 # Copy files from repository to docker container so the next uploadandscan action can access them.
        with:
          name: CodePackage
          path: '**/*.war' # Wildcards can be used to filter the files copied into the container. See: https://github.com/actions/upload-artifact
  
            # You may pin to the exact commit or the version.
      # uses: veracode/veracode-uploadandscan-action@35794dab9fbcd28fac19e44963f80646b27f4a7f
      - uses: veracode/veracode-uploadandscan-action@0.2.4
        with:
          name: Veracode Upload And Scan
        # appname
          appname: VeraDemo # default is ${{ github.repository }}
        # createprofile
          createprofile: false # default is true
        # filepath
          filepath: app/target/verademo.war 
        # version
          version: ${{ github.run_id }}-${{ github.run_number }}-${{ github.run_attempt }} # default is Scan from Github job: ${{ github.run_id }}-${{ github.run_number }}-${{ github.run_attempt }}
        # vid
          vid: '${{ secrets.VERACODE_API_ID }}'
        # vkey
          vkey: '${{ secrets.VERACODE_API_KEY }}'
        # true or false
          createsandbox: true # optional
        # name of the sandbox
          sandboxname: Daily-${{ github.run_id }}-VeraDemo.war # optional
        # wait X minutes for the scan to complete
          scantimeout: 60 # optional
        # modules to exclude from module selection
#        exclude: # optional
        # modules to include in module selection
#        include: # optional
        # business criticality - policy selection
#          criticality: Very High # optional
        # filename pattern
   #       pattern: # optional
        # replacement
    #    replacement: # optional
        # specify to scan in a sandbox
    #    sandboxid: # optional
        # All top level modules
    #    scanallnonfataltoplevelmodules: # optional
        # platform selected modules
    #    selected: # optional
        # selected modules like from previous scan
    #    selectedpreviously: # optional
        # teams
    #    teams: # optional
        # teams
    #    toplevel: # optional
        # automatically delete the current scan if there are any errors when uploading files or starting the scan
    #    deleteincompletescan: # optional
        # specify version of the Java API Wrapper; default is latest
    #    javawrapperversion: # optional
        # show detailed diagnostic information, which you can use for debugging, in the output.
    #    debug: # optional
    
      - name: Run within Docker
  # You may pin to the exact commit or the version.
  # uses: mosteo-actions/docker-run@1e8c2ac951679fbb21485cbb4eed9e39246ad823
        uses: mosteo-actions/docker-run@v1
        with:
          # A dockerhub image
          image: veracode/api-wrapper-java:latest # optional, default is ubuntu:latest
          # Command to run inside image
          command: java -jar api-wrapper-java.jar -action Uploadandscan -filepath /app/target/verademo.war -vid=${{ secrets.VERACODE_API_ID }} -vkey=${{ secrets.VERACODE_API_KEY }} -appname VeraDemo -version ${{ github.buildNumber }} # optional, default is ls -al
  #    - name: Stop Action Filter
  # You may pin to the exact commit or the version.
  # uses: Chocrates/stop-action-filter@2c3e506fe42b836ba9c4e586bc0c1a264c7a6853
   #     uses: Chocrates/stop-action-filter@v3
   #     with:
   #       image: veracode/api-wrapper-java:latest
   #       run: java -jar api-wrapper-java.jar -action passfail -vid=${{ secrets.VERACODE_API_ID }} -vkey=${{ secrets.VERACODE_API_KEY }} -appname "verademo.war" | grep -i "Did not pass" = true
       # if: run == [fail]
            #jobs: 
          #cancel: true
            #name: 'Fail'
        #runs-on: ubuntu-latest
         #steps:
        #uses: styfle/cancel-workflow-action@0.10.0
         #with:
        #$all_but_latest: false
          #access_token: ${{ secret.PRIVATE_TOKEN }}
# The filter clause that you would like to use to filter your jobs
  #       FILTER: 
    # Extra parameters to pass to `docker run`
       #   params: # optional, default is 
          # Host dir to map into the container
     #     host-dir: # optional, default is ${{ github.workspace }}
          # Guest dir that will overlay host-dir, and be used as working directory
       #   guest-dir: # optional, default is ${{ github.workspace }}
      #- uses: veracode/veracode-uploadandscan-action@master # Run the uploadandscan action. Inputs are described above.
     #   with:
       #   appname: '${{ secrets.VERACODE_APP_NAME }}'
      #    filepath: app/target/verademo.war
       #   vid: '${{ secrets.VERACODE_API_ID }}'
       #   vkey: '${{ secrets.VERACODE_API_KEY }}'
       #   scantimeout: 60
       #   createprofile: true

