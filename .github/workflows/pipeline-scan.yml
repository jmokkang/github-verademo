# This workflow will initiate a Veracode Static Analysis Pipeline scan, return a results.json and convert to SARIF for upload as a code scanning alert

name: Veracode Static Analysis Pipeline Scan

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  workflow_dispatch:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  pipeline-sast:
    name: Veracode Pipeline SAST
    runs-on: ubuntu-latest

    steps:
      # Prepare environment   
      - name: Setup Java JDK
        uses: actions/setup-java@v3.4.1
        with:
          # The Java version to set up. Takes a whole or semver Java version. See examples of supported syntax in README file
          java-version: '11'
          distribution: 'microsoft'

      - name: Verify Java
        run: 'java --version'

      - name: Download the Pipeline Scanner
        uses: wei/curl@master
        with:
          args: -O https://downloads.veracode.com/securityscan/pipeline-scan-LATEST.zip
      
      - name: Unzip the Pipeline Scanner
        run: unzip pipeline-scan-LATEST.zip
           
      - name: Get Present Directory
        run: pwd
    
      - name: Download a Build Artifact
        uses: actions/download-artifact@v3.0.2
        with:
          # Artifact name
          name: ${{inputs.artifact-name}}
          # Destination path
          path: ${{github.workspace}}
          
      - name: Confirm Contents
        run: ls -la
      
      - name: Run Pipeline Scanner
        run: java -Dpipeline.debug=false -jar pipeline-scan.jar --veracode_api_id "${{secrets.VERACODE_API_ID}}" --veracode_api_key "${{secrets.VERACODE_API_KEY}}" --file app/target/verademo.war -jf veracode-pipeline-results.json --fail_on_severity="Very High, High"

      - name: Upload analysis results
        uses: actions/upload-artifact@v2
        with:
            name: veracode-pipeline-results.json
            path: ${{github.workspace}}/veracode-pipeline-results.json
  
      - name: Veracode Upload And Scan
        # You may pin to the exact commit or the version.
        # uses: veracode/veracode-uploadandscan-action@35794dab9fbcd28fac19e44963f80646b27f4a7f
        uses: veracode/veracode-uploadandscan-action@0.2.4
        with:
            # appname
            appname: ${{inputs.profile-name}}
            # createprofile
            createprofile: true
            # filepath
            filepath: ./application.zip
            # version
            version: ${{ github.run_id }}-${{ github.run_number }}-${{ github.run_attempt }}
            # vid
            vid: ${{secrets.VERACODE_API_ID}}
            # vkey
            vkey: ${{secrets.VERACODE_API_KEY}}
            # true or false
            createsandbox: true
            # name of the sandbox
            sandboxname: 'Release Candidate'
  # This workflow contains a job to build and submit pipeline scan, you will need to customize the build process accordingly and make sure the artifact you build is used as the file input to the pipeline scan file parameter
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
        
  # build the application
    - uses: actions/setup-java@v1 # Make java accessible on path so the uploadandscan action can run.
      with: 
        java-version: '8'

    - name: Build with Maven
      run: mvn -B package --file app/pom.xml

      
    - name: Archive package
      uses: actions/upload-artifact@v2
      with:
        name: CodePackage
        path: '**/*.war'
  
  pipeline-scan:
    needs: build
    runs-on: ubuntu-latest
    container: 
      image: veracode/pipeline-scan:latest
      options: --user root # our normal luser doesn't have privs to write to github directories

    steps:
    - name: Retrieve artifact
      uses: actions/download-artifact@v2
      with:
        name: CodePackage
        path: /github/home
    
    #  Submit  project to pipeline scan
    - name: Pipeline Scan
      run: |
        cd /github/home/app/target
        java -jar /opt/veracode/pipeline-scan.jar --veracode_api_id="${{secrets.VERACODE_API_ID}}" --veracode_api_key="${{secrets.VERACODE_API_KEY}}" --fail_on_severity="Very High, High" --file="verademo.war" --json_output_file="results.json"
      continue-on-error: true

    - uses: actions/upload-artifact@v2
      with:
        name: ScanResults
        path: /github/home/app/target/results.json

  # Convert pipeline scan output to SARIF format  
  process-results:
    needs: pipeline-scan
    runs-on: ubuntu-latest
    steps:

    - name: Retrieve results
      uses: actions/download-artifact@v2
      with:
        name: ScanResults

    - name: convert
      uses: veracode/veracode-pipeline-scan-results-to-sarif@master
      with:
        pipeline-results-json: results.json
        output-results-sarif: veracode-results.sarif
        finding-rule-level: "4:3:0"
    - uses: github/codeql-action/upload-sarif@v2
      with:
    # Path to SARIF file relative to the root of the repository
        sarif_file: veracode-results.sarif
